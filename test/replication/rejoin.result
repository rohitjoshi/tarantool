env = require('test_run')
---
...
test_run = env.new()
---
...
test_run:cmd('restart server default with cleanup=1')
test_run:cmd('switch default')
---
- true
...
box.schema.user.grant('guest', 'replication')
---
...
test_run:cmd("create server replica with rpl_master=default, script='replication/replica.lua'")
---
- true
...
_ = box.schema.space.create("test")
---
...
_ = box.space.test:create_index("primary")
---
...
box.space.test:insert{1}
---
- [1]
...
test_run:cmd("start server replica")
---
- true
...
test_run:cmd('switch replica')
---
- true
...
box.space.test:select{}
---
- - [1]
...
test_run:cmd('switch default')
---
- true
...
test_run:cmd("stop server replica")
---
- true
...
box.space.test:insert{2}
---
- [2]
...
box.snapshot()
---
- ok
...
fio = require("fio")
---
...
fio.unlink(fio.pathjoin(fio.abspath("."), string.format('master/%020d.xlog', 6)))
---
- true
...
test_run:cmd("start server replica")
---
- true
...
test_run:cmd('switch replica')
---
- true
...
test_run:grep_log("replica", "Missing .xlog file between LSN") ~= nil
---
- true
...
fiber = require("fiber")
---
...
while box.space.test:count() < 2 do fiber.sleep(0.001) end
---
...
box.space.test:select{}
---
- - [1]
  - [2]
...
test_run:cmd('switch default')
---
- true
...
master_id = test_run:get_server_id('default')
---
...
replica_id = test_run:get_server_id('replica')
---
...
box.info.replication[master_id].lsn == box.info.replication[replica_id].downstream.vclock[master_id]
---
- true
...
box.schema.user.revoke('guest', 'replication')
---
...
test_run:cmd("stop server replica")
---
- true
...
test_run:cmd("cleanup server replica")
---
- true
...
box.space.test:drop()
---
...
